{"version":3,"file":"static/js/490.817a869e.chunk.js","mappings":"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","sources":["components/Input/InputText.js","components/Typography/ErrorText.js","features/user/LandingIntro.js","features/user/Login.js","pages/Login.js"],"sourcesContent":["import { useState } from \"react\"\n\n\nfunction InputText({labelTitle, labelStyle, type, containerStyle, defaultValue, placeholder, updateFormValue, updateType}){\n\n    const [value, setValue] = useState(defaultValue)\n\n    const updateInputValue = (val) => {\n        setValue(val)\n        updateFormValue({updateType, value : val})\n    }\n\n    return(\n        <div className={`form-control w-full ${containerStyle}`}>\n            <label className=\"label\">\n                <span className={\"label-text text-base-content \" + labelStyle}>{labelTitle}</span>\n            </label>\n            <input type={type || \"text\"} value={value} placeholder={placeholder || \"\"} onChange={(e) => updateInputValue(e.target.value)}className=\"input  input-bordered w-full \" />\n        </div>\n    )\n}\n\n\nexport default InputText","function ErrorText({styleClass, children}){\n    return(\n        <p className={`text-center  text-error ${styleClass}`}>{children}</p>\n    )\n}\n\nexport default ErrorText","function LandingIntro() {\n  return (\n    <div className=\"hero min-h-full rounded-l-xl bg-base-200\">\n      <div className=\"hero-content py-12\">\n        <div className=\"max-w-md\">\n          <h1 className=\"text-3xl text-center font-bold \">React Dashboard</h1>\n\n          <div className=\"text-center mt-12\">\n            <img\n              src=\"./intro.png\"\n              alt=\"Dashwind Admin Template\"\n              className=\"w-48 inline-block\"\n            ></img>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default LandingIntro;\n","import { useState, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport LandingIntro from \"./LandingIntro\";\nimport ErrorText from \"../../components/Typography/ErrorText\";\nimport InputText from \"../../components/Input/InputText\";\n\nfunction Login() {\n  const INITIAL_LOGIN_OBJ = {\n    password: \"\",\n    emailId: \"\",\n  };\n\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [loginObj, setLoginObj] = useState(INITIAL_LOGIN_OBJ);\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    setErrorMessage(\"\");\n\n    if (loginObj.emailId.trim() === \"\")\n      return setErrorMessage(\"Email Id is required! (use any value)\");\n    if (loginObj.password.trim() === \"\")\n      return setErrorMessage(\"Password is required! (use any value)\");\n    else {\n      setLoading(true);\n\n      localStorage.setItem(\"token\", \"DumyTokenHere\");\n      setLoading(false);\n      window.location.href = \"/app/dashboard\";\n    }\n  };\n\n  const updateFormValue = ({ updateType, value }) => {\n    setErrorMessage(\"\");\n    setLoginObj({ ...loginObj, [updateType]: value });\n  };\n\n  return (\n    <div className=\"min-h-screen bg-base-200 flex items-center\">\n      <div className=\"card mx-auto w-full max-w-5xl  shadow-xl\">\n        <div className=\"grid  md:grid-cols-2 grid-cols-1  bg-base-100 rounded-xl\">\n          <div className=\"\">\n            <LandingIntro />\n          </div>\n          <div className=\"py-24 px-10\">\n            <h2 className=\"text-2xl font-semibold mb-2 text-center\">Login</h2>\n            <form onSubmit={(e) => submitForm(e)}>\n              <div className=\"mb-4\">\n                <InputText\n                  type=\"emailId\"\n                  defaultValue={loginObj.emailId}\n                  updateType=\"emailId\"\n                  containerStyle=\"mt-4\"\n                  labelTitle=\"Email Id\"\n                  updateFormValue={updateFormValue}\n                />\n\n                <InputText\n                  defaultValue={loginObj.password}\n                  type=\"password\"\n                  updateType=\"password\"\n                  containerStyle=\"mt-4\"\n                  labelTitle=\"Password\"\n                  updateFormValue={updateFormValue}\n                />\n              </div>\n\n              <div className=\"text-right text-primary\">\n                <Link to=\"/forgot-password\">\n                  <span className=\"text-sm  inline-block  hover:text-primary hover:underline hover:cursor-pointer transition duration-200\">\n                    Forgot Password?\n                  </span>\n                </Link>\n              </div>\n\n              <ErrorText styleClass=\"mt-8\">{errorMessage}</ErrorText>\n              <button\n                type=\"submit\"\n                className={\n                  \"btn mt-2 w-full btn-primary\" + (loading ? \" loading\" : \"\")\n                }\n              >\n                Login\n              </button>\n\n              <div className=\"text-center mt-4\">\n                Don't have an account yet?{\" \"}\n                <Link to=\"/register\">\n                  <span className=\"  inline-block  hover:text-primary hover:underline hover:cursor-pointer transition duration-200\">\n                    Register\n                  </span>\n                </Link>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import {useState, useRef} from 'react'\nimport {Link} from 'react-router-dom'\nimport Login from '../features/user/Login'\n\nfunction ExternalPage(){\n\n\n    return(\n        <div className=\"\">\n                <Login />\n        </div>\n    )\n}\n\nexport default ExternalPage"],"names":["labelTitle","labelStyle","type","containerStyle","defaultValue","placeholder","updateFormValue","updateType","useState","value","setValue","className","onChange","e","val","target","styleClass","children","src","alt","loading","setLoading","errorMessage","setErrorMessage","password","emailId","loginObj","setLoginObj","onSubmit","preventDefault","trim","localStorage","setItem","window","location","href","submitForm","to"],"sourceRoot":""}